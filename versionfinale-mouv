#include "biblio_fonction.h"

extern char Tableau[LIGNE][COLONNE];
//coordonnées initiales
extern int Xi,Yi;
//variables
int NIV = 1;
int compteur_oiseau = 4;
extern int compteur_vie ;

void deplacement(int* pXm, int* pYm,int* pXr, int* pYr)
{
    char stockeur = VIDE;
    //effacement de la position antèrieur
    Tableau[Xi][Yi] = stockeur;
    //stocke la valeur initiale de la case
    stockeur = Tableau[*pXm][*pYm];
    //SI TERRE MODIF MOUV
    //si le bloc rencontré est un tapis roulant
    if(stockeur == TRZ||stockeur == TRQ||stockeur == TRS||stockeur == TRD)
    {
        //déplacement
        Tableau[*pXm][*pYm] = S;
        //incrémentation pour la valeur initale suivante
        Xi = *pXm;Yi = *pYm;
        //affichage de la modification
        affichage_tableau();
        do
        {
            switch(stockeur)
            {
                //Mouv HAUT
                case 'Z' :
                {
                    Xi--;
                    break;
                }
                    //Mouv GAUCHE
                case 'Q' :
                {
                    Yi--;
                    break;
                }
                    //Mouv BAS
                case 'S' :
                {
                    Xi++;
                    break;
                }
                    //Mouv DROITE
                case 'D' :
                {
                    Yi++;
                    break;
                }
            }
            stockeur = Tableau[Xi][Yi];
            if(stockeur == BLOC_AMOVIBLE|| stockeur == BORDUREVERTICALE||stockeur == BORDUREHORIZONTALE||stockeur == BLOC_CASSABLE)
            {
                affichage_tableau();
            }
            else
            {
                Tableau[*pXr][*pYr] = stockeur;
                //déplacement vers le haut
                Tableau[Xi][Yi] = S;
                //affichage de la modification
                affichage_tableau();
            }
        }while(stockeur  == TRZ||stockeur  == TRQ||stockeur  == TRS||stockeur == TRD);
    }
        //SI MOUV MODIF TERRE
    else
    {
        //si le bloc rencontré est movible
        if (stockeur == BLOC_MOVIBLE)
        {
            //déplacement du bloc
            Tableau[*pXr][*pYr] = BLOC_AMOVIBLE;
        }
        if (stockeur == OISEAU)
        {
            compteur_oiseau--;

            if (compteur_oiseau == 0)
            {
                NIV++;
                //modification du stockeur
                stockeur = VIDE;
                compteur_oiseau = 4;
                jeu(NIV,1,0);
            }
        }
        if (stockeur == PIEGE)
        {
            //modification du stockeur
            stockeur = VIDE;
            compteur_oiseau = 4;
            jeu(0,-1,0);
        }
        else if (stockeur == CODEBALLE)
        {
            compteur_vie--;
        }
        //déplacement
        Tableau[*pXm][*pYm] = S;
        //incrémentation pour la valeur initale suivante
        Xi = *pXm, Yi = *pYm;
    }
    //affichage de la modification
    affichage_tableau();
}
//programme d'édition des changements
int mouvement(int Xm, int Ym, int Xr, int Yr)
{
//vérifiaction de la possibilité d'execution du mouvement en cas de bordure ou de bloc fixe
    if(Tableau[Xm][Ym] == BLOC_AMOVIBLE||Tableau[Xm][Ym] == BORDUREVERTICALE||Tableau[Xm][Ym] == BORDUREHORIZONTALE||Tableau[Xm][Ym] == BLOC_CASSABLE)
    {
        affichage_tableau();
    }
        //vérification en cas de bloc movible
    else if (Tableau[Xm][Ym] == BLOC_MOVIBLE)
    {
        if(Tableau[Xr][Yr] == BLOC_AMOVIBLE||Tableau[Xm][Ym] == BORDUREVERTICALE||Tableau[Xm][Ym] == BORDUREHORIZONTALE||Tableau[Xr][Yr] == BLOC_CASSABLE||Tableau[Xr][Yr] == BLOC_MOVIBLE)
        {
            affichage_tableau();
        }
        else
        {
            deplacement(&Xm,&Ym,&Xr,&Yr);
        }
    }
        //vérification du bloc tapis roulant
    else if (Tableau[Xm][Ym] == TRZ||Tableau[Xm][Ym] == TRQ||Tableau[Xm][Ym] == TRS||Tableau[Xm][Ym] == TRD)
    {
        deplacement(&Xm,&Ym,&Xm,&Ym);
    }
    //déplacement permis si aucune autre condition n'est validé
    else
    {
        deplacement(&Xm,&Ym,&Xr,&Yr);
    }
}
