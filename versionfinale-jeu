#include <stdio.h>
#include "biblio_fonction.h"
#include <conio.h>
#include <unistd.h>
#include <time.h>

extern char Tableau[LIGNE][COLONNE];
//coordonnées initiales
extern int Xi,Yi;
//compteur
int compteur_vie = 3;

struct Balle {
    int X,Y,vecX,vecY;
};

void score(int score, int niv)
{
    int scoreduniveau;
    int scoretotal = 0;
    scoreduniveau = timer*100;
    printf("Le score du niveau %d est : %d\n", niv,scoreduniveau);
    scoretotal += scoreduniveau;
    printf("le score total est : %d\n", scoretotal);
}

void acquisition_touche(int niv, char monter,char gauche,char descendre,char droite,char casser,char pause)
{
    char touche;
    touche = _getch();
    //reponse à la touche
    if ( touche == monter)
    {
        printf("%d", mouvement(Xi - 1, Yi, Xi - 2, Yi));
    }
    else if ( touche == gauche)
    {
        printf("%d", mouvement(Xi, Yi - 1, Xi, Yi - 2));
    }
    else if ( touche == descendre)
    {
        printf("%d",mouvement(Xi + 1, Yi, Xi + 2, Yi));
    }
    else if ( touche == droite)
    {
        printf("%d", mouvement(Xi, Yi + 1, Xi, Yi + 2));
    }
    else if ( touche == casser)
    {
        if (Tableau[Xi-1][Yi] == BLOC_CASSABLE)
            Tableau[Xi-1][Yi] = VIDE ;
        if (Tableau[Xi+1][Yi] == BLOC_CASSABLE)
            Tableau[Xi+1][Yi] = VIDE;
        if (Tableau[Xi][Yi-1] == BLOC_CASSABLE)
            Tableau[Xi][Yi-1] = VIDE;
        if (Tableau[Xi][Yi+1] == BLOC_CASSABLE)
            Tableau[Xi][Yi+1] = VIDE;
        affichage_tableau();
    }
    else if ( touche == pause)
    {
        //save_balle(1);
        int* pniv = &niv;
        rAm(1);
        menu_pause(0,niv);
    }
}

void jeu(int niv,int victoire,int partie)
{
    //touches
    char  monter ='z', gauche = 'q',descendre = 's', droite = 'd',casser = 'c',pause = 'P';
    //timeur
    int timeur = 0;
    int seconds = 120;
    int i = 0 , n = 0 ,apparition = 0, j = 0;
    //stockeur
    char stockeur = VIDE;
    //balle
    int vitesse_balle = 1000;

    if (victoire == 0)
    {
        //intialisation map
        printf("%d", generation_map_test(niv, partie));
        struct Balle B;
        if ( partie != 1)
        {
            B.vecX=1; B.vecY=1;
            B.X=4; B.Y=1;
        }
        else
        {
            /*FILE *fichier_balle;
            fichier_balle = fopen("balle.txt", "r");
            fscanf(fichier_balle, "%d %d %d %d",&B.X,&B.Y,&B.vecX,&B.vecY);
            fclose(fichier_balle);*/
        }
        clock_t temps_ecoule;
        clock_t start_time = clock();
        do {
            if (compteur_vie == 0)
            {
                jeu(0,-1,0);
            }
            //boucle d'acquisition
            if (_kbhit())
            {
                save_touche(2,1,niv,monter,gauche,descendre,droite,casser,pause);
            }
            temps_ecoule = clock() - start_time;
            if ( temps_ecoule/1000 == i )
            {
                if ( niv > 1)
                {
                    if ( i == n )
                    {
                        if (B.X==LIGNE-2)
                            B.vecX=-1;
                        else if (B.Y==COLONNE-2)
                            B.vecY=-1;
                        else if (B.X==1)
                            B.vecX=1;
                        else if (B.Y==1)
                            B.vecY=1;
                        B.X += B.vecX;
                        B.Y += B.vecY;
                        Tableau[B.X-B.vecX][B.Y-B.vecY] = stockeur;
                        stockeur = Tableau[B.X][B.Y];
                        if ( stockeur == S)
                        {
                            compteur_vie--;
                            Tableau[4][8] = S;
                            Xi = 4;Yi = 8;
                            stockeur = VIDE;
                            timer = 120;
                            seconds = (temps_ecoule/1000)+seconds;
                        }
                        Tableau[B.X][B.Y] = CODEBALLE;
                        n++;
                        affichage_tableau();
                    }
                }
                if ( i == apparition)
                {
                    if (j == 0)
                    {
                        j++;
                    }
                    else if (j == 1)
                    {
                       j--;
                    }
                    bloc_depop(j);
                    apparition+7;
                }
                timer = seconds - (temps_ecoule / 1000);
                printf(" \rTemps restant : %d ", timeur);
                printf(" Vie restantes : %d",compteur_vie);
                i++;
            }
            if(temps == 0)
            {
                compteur_vie--;
            }
        }while(1);
    }
    else
    {
        system("cls");
        if (victoire == 1) {
            printf("You win !!!\n");
            score(120 - i, niv-1);
            sleep(5);
            if (niv > 4) {
                menu();
            }
            compteur_vie = 3;
            partie =  0;
            jeu(niv,0,partie);
        }
        else if (victoire == -1)
        {
            printf("You lose !!!\n");
            sleep(5);
            menu();
        }
    }
}

void menu_pause(int choix,int niv)
{
    system("cls");
    printf("MENU PAUSE \n"
           "1 : Continuer\n"
           "2 : Sauvegarder\n"
           "3 : Quitter\n");
    do
    {
        choix = _getch();
    }while (!(choix == '1' || choix == '2'||choix == '3'));
    switch(choix)
    {
        case '1' :
        {
            jeu(niv,0,1);
            break;
        }
        case '2' :
        {
            menu_save();
            break;
        }
        case '3' :
        {
            rAm(3);
            menu();
            break;
        }
    }
}
